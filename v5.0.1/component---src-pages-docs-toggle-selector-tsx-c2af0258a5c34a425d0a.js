(self.webpackChunkreact_components_docs=self.webpackChunkreact_components_docs||[]).push([[745],{50443:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return I}});var l=t(27378),a=t(45141),o=t(4769),r=t(30808),i=t(508),c=t.n(i),s=t(58923),d=t(75418),m=["multiple","value","onChange","indicator"],u=l.forwardRef((function(e,n){var t=e.multiple,a=e.value,i=e.onChange,u=e.indicator,p=(0,r.Z)(e,m),g=l.useState((0,d.k)("ts-"))[0],h=l.useCallback((function(e,n){if(i)if(t){var l=a||[],r=parseInt(e.target.dataset.indexNumber);l.includes(r)?i(l.filter((function(e){return e!==r}))):i([].concat((0,o.Z)(l),[r]).sort())}else i(parseInt(e.target.dataset.indexNumber));n&&n(e)}),[a,t,i]);return l.createElement("div",Object.assign({},p,{ref:n,className:c()("rc","toggle-selector",p.className)}),l.createElement(s.a,Object.assign({},u,{noBorder:!0}),p.children&&l.Children.map(p.children,(function(e,n){var o;return l.isValidElement(e)?l.cloneElement(e,{onChange:function(n){var t;return h(n,null===(t=e.props)||void 0===t?void 0:t.onChange)},name:t?null:g,disabled:p.disabled||(null===(o=e.props)||void 0===o?void 0:o.disabled),type:t?"checkbox":"radio",checked:t?!!Array.isArray(a)&&a.includes(n):a===n,"data-index-number":n}):e}))))})),p=["wrapperProps","children"],g=function(e){var n=e.wrapperProps,t=e.children,a=(0,r.Z)(e,p),o=l.useState(a.id),i=o[0],s=o[1];return l.useEffect((function(){return s(a.id||(0,d.k)("toggle-selector-"))}),[a.id]),l.createElement("div",Object.assign({},n,{className:c()("rc","toggle-selector-item",null==n?void 0:n.className)}),l.createElement("input",Object.assign({},a,{id:i})),l.createElement("label",{htmlFor:i},t))},h=t(57518),b=t(29039),f=t.n(b),v=t(67886),C=t.n(v),T=t(36647),y=t.n(T),S=t(74710),E=[{key:"error",label:"danger",value:"danger",additionalProps:{wrapperProps:{className:"d-inline-block"}}},{key:"success",label:"success",value:"success",additionalProps:{wrapperProps:{className:"d-inline-block"}}},{key:"warning",label:"warning",value:"warning",additionalProps:{wrapperProps:{className:"d-inline-block"}}}],x=t(11662),I=function(){var e=l.useState(),n=e[0],t=e[1],o=l.useState(),r=o[0],i=o[1],c=(0,h.b)([{key:"controls",items:[{key:"multiple",label:"multiple",controlType:"Checkbox",description:"Select multiple items at the same time"},{key:"disabled",label:"disabled",description:"You can disable individual buttons or disable all toggles",controlType:"Checkbox"},{key:"indicator",label:"indicator",controlType:"Checkbox",value:!1},{key:"indicatorType",label:"Indicator type",options:E,controlType:"Radio",rulerKey:"indicator",condition:!0,formElementAdditionalProps:{className:"indent pl-3 pt-2"}},{key:"icons",label:"With icons as children",controlType:"Checkbox",description:"Find this example in the notes"}]}]),s=c[0],d=c[1].controls,m=l.useMemo((function(){return d.indicator?{type:d.indicatorType,message:"Indicator message"}:null}),[d.indicator,d.indicatorType]);return l.createElement(a.Z,{mainFile:x,example:l.createElement(u,{className:"m-auto",value:d.multiple?r:n,onChange:function(e){return d.multiple?i(e):t(e)},multiple:d.multiple,disabled:d.disabled,indicator:d.indicator?m:null},l.createElement(g,null,d.icons&&l.createElement(f(),{width:"2em",height:"2em"}),l.createElement("span",{className:"mx-auto"},"Yes")),l.createElement(g,null,d.icons&&l.createElement(C(),{width:"2em",height:"2em"}),l.createElement("span",{className:"mx-auto"},"No")),l.createElement(g,null,d.icons&&l.createElement(y(),{width:"2em",height:"2em"}),l.createElement("span",{className:"mx-auto"},"Maybe"))),code:'<ToggleSelector name="choices" value={value} onChange={setValue}>\n    <ToggleSelectorItem>Yes</ToggleSelectorItem>\n    <ToggleSelectorItem>No</ToggleSelectorItem>\n    <ToggleSelectorItem>Maybe</ToggleSelectorItem>\n</ToggleSelector>',controls:s(),note:l.createElement(l.Fragment,null,l.createElement("h4",null,"Toggle select with icons"),l.createElement("p",null,"If you want to render a toggle selector group with icons just pass the icon with the text as children and align them correctly. Find an example below:"),l.createElement(S.O,{language:"jsx"},'<ToggleSelector>\n    <ToggleSelectorItem>\n        <LaughingIcon />\n        <span className="mx-auto">Yes</span>\n    </ToggleSelectorItem>\n    <ToggleSelectorItem>\n        <DizzyIcon />\n        <span className="mx-auto">No</span>\n    </ToggleSelectorItem>\n    <ToggleSelectorItem>\n        <SmileUpsideDownIcon />\n        <span className="mx-auto">Maybe</span>\n    </ToggleSelectorItem>\n</ToggleSelector>'))})}},11662:function(e,n,t){"use strict";t.r(n),n.default='import React from "react";\nimport classnames from "classnames";\nimport { ToggleSelectorItemProps } from "./ToggleSelectorItem";\nimport { FeedbackIndicator, Indicator } from "../FeedbackIndicator";\nimport { randomId } from "@sebgroup/frontend-tools/randomId";\nimport "./toggle-selector.scss";\n\ninterface ToggleSelectorSingleProps {\n    /** allow multiple selections */\n    multiple?: false;\n    /** selected value */\n    value?: number;\n    /** on toggle selector change */\n    onChange?: (value: number) => void;\n}\n\ninterface ToggleSelectorMultipleProps {\n    /** allow multiple selections */\n    multiple?: true;\n    /** selected values */\n    value?: readonly number[];\n    /** on toggle selector change */\n    onChange?: (value: number[]) => void;\n}\n\ntype ToggleSelectorValueProps = ToggleSelectorSingleProps | ToggleSelectorMultipleProps;\ntype NativeDivProps = Omit<JSX.IntrinsicElements["div"], "onChange">;\n\nexport type ToggleSelectorProps = NativeDivProps &\n    ToggleSelectorValueProps & {\n        /** disable element */\n        disabled?: boolean;\n        /** Form indicator */\n        indicator?: Indicator;\n    };\n\n/** A selector to display and select options in a flow. */\nexport const ToggleSelector: React.FC<ToggleSelectorProps> = React.forwardRef(({ multiple, value, onChange, indicator, ...props }: ToggleSelectorProps, ref: React.ForwardedRef<HTMLDivElement>) => {\n    const [name] = React.useState<string>(randomId("ts-"));\n\n    const handleChange = React.useCallback(\n        (e: React.ChangeEvent<HTMLInputElement>, childOnChange: React.ChangeEventHandler<HTMLInputElement>) => {\n            if (onChange) {\n                if (multiple) {\n                    const values: number[] = (value as number[]) || [];\n                    const index: number = parseInt(e.target.dataset.indexNumber);\n                    if (values.includes(index)) {\n                        onChange(values.filter((item) => item !== index) as any);\n                    } else {\n                        onChange([...values, index].sort() as any);\n                    }\n                } else {\n                    onChange(parseInt(e.target.dataset.indexNumber) as any);\n                }\n            }\n            childOnChange && childOnChange(e);\n        },\n        [value, multiple, onChange]\n    );\n\n    return (\n        <div {...props} ref={ref} className={classnames("rc", "toggle-selector", props.className)}>\n            <FeedbackIndicator {...indicator} noBorder>\n                {props.children &&\n                    React.Children.map(props.children, (Child: React.ReactElement<ToggleSelectorItemProps>, index: number) => {\n                        return React.isValidElement<ToggleSelectorItemProps>(Child)\n                            ? React.cloneElement<ToggleSelectorItemProps & { [k: string]: any }>(Child as any, {\n                                  onChange: (e) => handleChange(e, Child.props?.onChange),\n                                  name: multiple ? null : name,\n                                  disabled: props.disabled || Child.props?.disabled,\n                                  type: multiple ? "checkbox" : "radio",\n                                  checked: multiple ? (Array.isArray(value) ? value.includes(index) : false) : (value as number) === index,\n                                  "data-index-number": index,\n                              })\n                            : Child;\n                    })}\n            </FeedbackIndicator>\n        </div>\n    );\n}) as React.ForwardRefExoticComponent<React.PropsWithoutRef<ToggleSelectorProps & ToggleSelectorMultipleProps> & React.RefAttributes<HTMLDivElement>>;\n'},67886:function(e,n,t){var l=t(27378);function a(e){return l.createElement("svg",e,[l.createElement("path",{fillRule:"evenodd",d:"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z",key:0}),l.createElement("path",{fillRule:"evenodd",d:"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zM4.146 5.146a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 1 1 .708.708l-.647.646.647.646a.5.5 0 1 1-.708.708L5.5 7.207l-.646.647a.5.5 0 1 1-.708-.708l.647-.646-.647-.646a.5.5 0 0 1 0-.708zm5 0a.5.5 0 0 1 .708 0l.646.647.646-.647a.5.5 0 0 1 .708.708l-.647.646.647.646a.5.5 0 0 1-.708.708l-.646-.647-.646.647a.5.5 0 1 1-.708-.708l.647-.646-.647-.646a.5.5 0 0 1 0-.708zM8 13a2 2 0 1 0 0-4 2 2 0 0 0 0 4z",key:1})])}a.defaultProps={width:"1em",height:"1em",fill:"currentColor",className:"bi bi-emoji-dizzy-fill",viewBox:"0 0 16 16"},e.exports=a,a.default=a},29039:function(e,n,t){var l=t(27378);function a(e){return l.createElement("svg",e,l.createElement("path",{fillRule:"evenodd",d:"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zM7 6.5c0 .501-.164.396-.415.235C6.42 6.629 6.218 6.5 6 6.5c-.218 0-.42.13-.585.235C5.164 6.896 5 7 5 6.5 5 5.672 5.448 5 6 5s1 .672 1 1.5zm5.331 3a1 1 0 0 1 0 1A4.998 4.998 0 0 1 8 13a4.998 4.998 0 0 1-4.33-2.5A1 1 0 0 1 4.535 9h6.93a1 1 0 0 1 .866.5zm-1.746-2.765C10.836 6.896 11 7 11 6.5c0-.828-.448-1.5-1-1.5s-1 .672-1 1.5c0 .501.164.396.415.235.165-.106.367-.235.585-.235.218 0 .42.13.585.235z"}))}a.defaultProps={width:"1em",height:"1em",fill:"currentColor",className:"bi bi-emoji-laughing-fill",viewBox:"0 0 16 16"},e.exports=a,a.default=a},36647:function(e,n,t){var l=t(27378);function a(e){return l.createElement("svg",e,l.createElement("path",{fillRule:"evenodd",d:"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zM7 9.5C7 8.672 6.552 8 6 8s-1 .672-1 1.5.448 1.5 1 1.5 1-.672 1-1.5zM4.285 6.433a.5.5 0 0 0 .683-.183A3.498 3.498 0 0 1 8 4.5c1.295 0 2.426.703 3.032 1.75a.5.5 0 0 0 .866-.5A4.498 4.498 0 0 0 8 3.5a4.5 4.5 0 0 0-3.898 2.25.5.5 0 0 0 .183.683zM10 8c.552 0 1 .672 1 1.5s-.448 1.5-1 1.5-1-.672-1-1.5S9.448 8 10 8z"}))}a.defaultProps={width:"1em",height:"1em",fill:"currentColor",className:"bi bi-emoji-smile-upside-down-fill",viewBox:"0 0 16 16"},e.exports=a,a.default=a}}]);
//# sourceMappingURL=component---src-pages-docs-toggle-selector-tsx-c2af0258a5c34a425d0a.js.map