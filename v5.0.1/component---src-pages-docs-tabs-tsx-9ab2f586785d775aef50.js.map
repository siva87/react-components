{"version":3,"file":"component---src-pages-docs-tabs-tsx-9ab2f586785d775aef50.js","mappings":"iLAIMA,EAAuBC,EAAQ,OAO/BC,EAAqBC,EAAAA,MAAW,WAClC,MAA0BA,EAAAA,SAAuB,GAA1CC,EAAP,KAAcC,EAAd,KAEA,OACI,gBAAC,IAAD,CACIC,SAAUN,EACVO,QACI,gBAAC,IAAD,CAAMH,MAAOA,EAAOI,YAAaH,GAC7B,gBAAC,IAAD,cACA,gBAAC,IAAD,eACA,gBAAC,IAAD,cACA,gBAAC,IAAD,CAASI,UAAQ,GAAjB,WAGRC,KApBM,uJAyBlB,a,6BC9BA","sources":["webpack://react-components-docs/./src/pages/docs/tabs.tsx","webpack://react-components-docs/../lib/src/Tabs/Tabs.tsx?b1e5"],"sourcesContent":["import React from \"react\";\nimport Docs from \"@common/Docs\";\nimport { Tabs, TabItem } from \"@sebgroup/react-components/Tabs\";\n\nconst importString: string = require(\"!raw-loader!@sebgroup/react-components/Tabs/Tabs\");\nconst code: string = `<Tabs value={value} onTabChange={setValue}>\n    <TabItem>First</TabItem>\n    <TabItem>Second</TabItem>\n    <TabItem>Third</TabItem>\n</Tabs>`;\n\nconst TabsPage: React.FC = React.memo(() => {\n    const [value, setValue] = React.useState<number>(0);\n\n    return (\n        <Docs\n            mainFile={importString}\n            example={\n                <Tabs value={value} onTabChange={setValue}>\n                    <TabItem>First</TabItem>\n                    <TabItem>Second</TabItem>\n                    <TabItem>Third</TabItem>\n                    <TabItem disabled>Fourth</TabItem>\n                </Tabs>\n            }\n            code={code}\n        />\n    );\n});\n\nexport default TabsPage;\n","export default \"import React from \\\"react\\\";\\nimport { TabItemProps } from \\\"./TabItem\\\";\\nimport classnames from \\\"classnames\\\";\\n\\nexport type TabsProps = JSX.IntrinsicElements[\\\"ul\\\"] & {\\n    /** Index of focsued tab */\\n    value?: number;\\n    /** Callback on tab item changed */\\n    onTabChange?: (index: number) => void;\\n};\\n/** Tabs organize and allow navigation between groups of content that are related and at the same level of hierarchy. */\\nexport const Tabs: React.FC<TabsProps> = React.forwardRef(({ value, onTabChange, ...props }: TabsProps, ref: React.ForwardedRef<HTMLUListElement>) => {\\n    const onClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\\n        event.currentTarget.href.endsWith(\\\"#\\\") && event.preventDefault();\\n        onTabChange && onTabChange(parseInt(event.currentTarget.dataset.indexNumber));\\n    };\\n\\n    return (\\n        <ul {...props} ref={ref} className={classnames(\\\"rc nav nav-tabs\\\", props.className)} role={props.role || \\\"tablist\\\"}>\\n            {React.Children.map(props.children, (Child: React.ReactElement<TabItemProps>, index: number) => {\\n                return React.isValidElement<React.FC<TabItemProps>>(Child)\\n                    ? React.cloneElement<any>(Child, {\\n                          active: index === value,\\n                          onClick,\\n                          \\\"data-index-number\\\": index,\\n                      })\\n                    : Child;\\n            })}\\n        </ul>\\n    );\\n});\\n\";"],"names":["importString","require","TabsPage","React","value","setValue","mainFile","example","onTabChange","disabled","code"],"sourceRoot":""}