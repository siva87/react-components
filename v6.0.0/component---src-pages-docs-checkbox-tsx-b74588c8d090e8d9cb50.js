"use strict";(self.webpackChunkreact_components_docs=self.webpackChunkreact_components_docs||[]).push([[4540],{35058:function(e,n,o){o.r(n);var a=o(27378),r=o(45141),i=o(69051),c=o(57518),l=o(58923),t=o(74710),s=o(68421),d=[{key:"error",label:"danger",value:"danger",additionalProps:{wrapperProps:{className:"d-inline-block"}}},{key:"success",label:"success",value:"success",additionalProps:{wrapperProps:{className:"d-inline-block"}}},{key:"warning",label:"warning",value:"warning",additionalProps:{wrapperProps:{className:"d-inline-block"}}}],p=[{key:"individual",label:"Individual",value:"1",description:"Pass an indicator to individual checkboxes"},{key:"grouped",label:"Grouped",value:"2",description:"Wrap a group of checkboxes with a FeedbackIndicator"}];n.default=function(){var e=(0,c.b)([{key:"controls",items:[{key:"inline",label:"inline",controlType:"Checkbox",value:!1},{key:"indicator",label:"indicator",controlType:"Checkbox",value:!1},{key:"indicatorType",rulerKey:"indicator",condition:!0,label:"Indicator type",options:d,controlType:"Radio",value:d[0].value,formElementAdditionalProps:{className:"indent pl-3 pt-2"}},{key:"indicatorGrouping",label:"Indicator choices",controlType:"Radio",rulerKey:"indicator",condition:!0,options:p,value:p[0].value,formElementAdditionalProps:{className:"indent pl-3 pt-2"}}]}]),n=e[0],o=e[1].controls,m="1"===o.indicatorGrouping,u="2"===o.indicatorGrouping,b=a.useMemo((function(){return o.indicator?{type:o.indicatorType,message:"Indicator message"}:null}),[o.indicator,o.indicatorType]);return a.createElement(r.Z,{mainFile:s,example:a.createElement("div",{className:"w-100"},a.createElement(l.a,{type:u?null==b?void 0:b.type:null,message:u?null==b?void 0:b.message:null},a.createElement(i.X,{inline:o.inline,indicator:m?b:null},"First",a.createElement("p",{className:"text-muted m-0"},"Express yourself here")),a.createElement(i.X,{inline:o.inline},"Second"))),code:"<Checkbox>Label here</Checkbox>",controls:n(),note:a.createElement(a.Fragment,null,a.createElement("h4",null,"Checkboxes with description"),a.createElement("p",null,"Checkboxes can sometimes be rendered with a description, in order to do that, you can simply render a ",a.createElement("code",null,"p")," tag as children. It will look something like this:"),a.createElement(t.O,{className:"card",language:"jsx"},'<Checkbox>\n    Your label here\n    <p className="text-muted m-0">Explain yourself here</p>\n</Checkbox>'))})}},68421:function(e,n,o){o.r(n),n.default='import React from "react";\nimport { randomId } from "@sebgroup/frontend-tools/randomId";\nimport classnames from "classnames";\nimport { FeedbackIndicator, Indicator } from "../FeedbackIndicator/FeedbackIndicator";\nimport "./checkbox.scss";\n\nexport type CheckboxProps = JSX.IntrinsicElements["input"] & {\n    /** Displays the checkbox inline */\n    inline?: boolean;\n    /** Div wrapper props */\n    wrapperProps?: JSX.IntrinsicElements["div"];\n    /** Indicator for error, warning or success */\n    indicator?: Indicator;\n};\n\nexport const Checkbox: React.FC<CheckboxProps> = React.forwardRef(({ inline, wrapperProps, indicator, children, ...props }: CheckboxProps, ref: React.ForwardedRef<HTMLInputElement>) => {\n    const [id, setId] = React.useState<string>(props.id);\n\n    React.useEffect(() => setId(props.id || (children ? props.id || randomId("checkbox-") : null)), [props.id, children]);\n\n    return (\n        <FeedbackIndicator {...indicator}>\n            <div {...wrapperProps} className={classnames("rc", "checkbox", { inline }, wrapperProps?.className)}>\n                <label htmlFor={id} className={classnames("custom-control", "custom-checkbox", { "custom-control-inline": inline })}>\n                    <input {...props} type="checkbox" id={id} className={classnames("custom-control-input", props.className)} ref={ref} />\n                    <label htmlFor={id} className="custom-control-label">\n                        {children}\n                    </label>\n                </label>\n            </div>\n        </FeedbackIndicator>\n    );\n});\n'}}]);
//# sourceMappingURL=component---src-pages-docs-checkbox-tsx-b74588c8d090e8d9cb50.js.map