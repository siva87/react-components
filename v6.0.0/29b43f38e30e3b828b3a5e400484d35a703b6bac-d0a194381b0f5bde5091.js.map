{"version":3,"file":"29b43f38e30e3b828b3a5e400484d35a703b6bac-d0a194381b0f5bde5091.js","mappings":"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","sources":["webpack://react-components-docs/../node_modules/@sebgroup/frontend-tools/randomId/randomId.js","webpack://react-components-docs/../node_modules/classnames/index.js","webpack://react-components-docs/./src/components/Footer.tsx","webpack://react-components-docs/./src/components/VersionsDropdown.tsx","webpack://react-components-docs/./src/configs.ts","webpack://react-components-docs/./src/hooks/useIsMobile.ts","webpack://react-components-docs/../lib/src/CloseButton/CloseButton.tsx","webpack://react-components-docs/../lib/src/Dropdown/CustomDropdownItem.tsx","webpack://react-components-docs/../lib/src/Dropdown/Dropdown.tsx","webpack://react-components-docs/../lib/src/FeedbackIndicator/FeedbackIndicator.tsx","webpack://react-components-docs/../lib/src/Textbox/Textbox.tsx","webpack://react-components-docs/./static/icons/external-link.svg","webpack://react-components-docs/../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import \"core-js/modules/es.date.to-string.js\";\n\nfunction e(e) {\n  return e + String(1e3 * Math.random() + new Date().getTime());\n}\n\nexport { e as randomId };","require(\"core-js/modules/es.date.to-string.js\");\n\n/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames[\"default\"] = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React from \"react\";\nimport \"../styles/footer.scss\";\n\nexport const Footer: React.FC = React.memo(() => {\n    return (\n        <footer className=\"container\">\n            <nav className=\"navbar\">\n                <div className=\"navbar-brand\">\n                    Developed with ❤️ by <a href=\"https://seb.se\" target=\"_blank\" rel=\"noreferrer noopener nofollow\"></a>\n                </div>\n                <div className=\"navbar-text\">\n                    <a href=\"https://www.npmjs.com/package/@sebgroup/ng-components/\" target=\"_blank\" rel=\"noreferrer noopener nofollow\" title=\"View in npm\">\n                        <img src=\"https://img.shields.io/npm/v/@sebgroup/react-components\" alt=\"npm version\" />\n                    </a>\n                </div>\n            </nav>\n        </footer>\n    );\n});\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Dropdown } from \"@sebgroup/react-components/Dropdown\";\nimport { withPrefix } from \"gatsby-link\";\nimport \"../styles/versions-dropdown.scss\";\nconst versions = require(\"../assets/jsons/versions.json\").include;\n\ninterface VersionItem {\n    name: string;\n}\ninterface FormattedVersionItem {\n    value: string;\n    label: string;\n}\n\nexport interface VersionsDropdownProps {\n    className?: string;\n}\n\nconst VersionsDropdown: React.FC<React.PropsWithChildren<VersionsDropdownProps>> = (props: VersionsDropdownProps) => {\n    const [currentVersion, setCurrentVersion] = React.useState<string>(\"\");\n    const [formattedList, setFormattedList] = React.useState<Array<FormattedVersionItem>>([]);\n\n    /** format dropdown list */\n    const formatList = () => {\n        setFormattedList(\n            versions?.length > 0\n                ? versions.map((item: VersionItem) => ({\n                      value: item.name,\n                      label: item.name.replace(/[^.]+$/, \"x\"),\n                  }))\n                : []\n        );\n    };\n\n    React.useEffect(() => {\n        const currentpath: string = window.location.href;\n        const regex: RegExp = new RegExp(\"v(\\\\d+\\\\.)(\\\\d+\\\\.)(\\\\d)(-(beta|alpha)(\\\\.\\\\d))?\", \"g\");\n        const matchedVersions: Array<string> = currentpath.match(regex);\n        setCurrentVersion(matchedVersions?.length > 0 ? matchedVersions[0] : versions[0].name);\n        formatList();\n    }, []);\n\n    return (\n        <Dropdown\n            wrapperProps={{ className: classnames(\"version-dropdown\", props.className) }}\n            value={currentVersion}\n            selectedLabel={(value: string) => formattedList.find((item: FormattedVersionItem) => item.value === value)?.label}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) => (window.location.href = `${window.location.origin}${withPrefix(e.target.value)}/`)}\n        >\n            {formattedList.map((item: FormattedVersionItem, index: number) => (\n                <option key={index} value={item.value}>\n                    {item.label}\n                </option>\n            ))}\n        </Dropdown>\n    );\n};\n\nexport default VersionsDropdown;\n","const pkg = require(\"../package.json\");\n\nexport const urls: NavsURLs = {\n    releases: \"https://github.com/sebgroup/react-components/releases\",\n    github: \"https://github.com/sebgroup/react-components/\",\n    contribute: \"https://github.com/sebgroup/react-components/blob/alpha/CONTRIBUTING.md\",\n    issues: \"https://github.com/sebgroup/react-components/issues\",\n    v4: \"/v4/index.html\",\n};\n\nconst imageUrl: string = `${pkg.homepage}/site-preview.png`;\nconst siteName: string = \"SEB React Components\";\n\nexport const metaConfigs: MetaConfig = {\n    keywords: \"SEB, React, react components, typescript, mobile, web, ui, ux, open source, components\",\n    siteUrl: pkg.homepage,\n    description: pkg.description,\n    title: siteName,\n    sitePreviewImageUrl: imageUrl,\n    jsonLD: {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebApplication\",\n        name: siteName,\n        description: pkg.description,\n        url: pkg.homepage,\n        image: imageUrl,\n        screenshot: imageUrl,\n        applicationCategory: \"Software Documentation\",\n        operatingSystem: \"Android, Chrome OS, iOS, iPadOS, macOS, OS X, Linux, Windows\",\n        author: {\n            \"@type\": \"Organization\",\n            name: \"SEB\",\n            description: \"SEB is a Swedish financial group for corporate customers, institutions and private individuals with headquarters in Stockholm\",\n            url: \"https://seb.se\",\n            logo: \"https://seb.se/Static/Images/SebLogo.svg\",\n        },\n    },\n};\n","import { useState, useEffect } from \"react\";\n\nexport function useIsMobile(): boolean {\n    if (typeof window !== \"undefined\") {\n        const mobileQuery: string = \"(max-width: 767px)\";\n        const mediaQueryLists: MediaQueryList = window.matchMedia(mobileQuery);\n        const [isMobile, setIsMobile] = useState<boolean>(window.matchMedia(mobileQuery).matches);\n\n        useEffect(() => {\n            const handler: VoidFunction = () => setIsMobile(mediaQueryLists?.matches);\n            mediaQueryLists?.addEventListener(\"change\", handler);\n            return () => mediaQueryLists?.removeEventListener(\"change\", handler);\n        }, []);\n\n        return isMobile;\n    }\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport \"./close-button.scss\";\n\n/**\n * TODO: This is a component that fixes the broken `.close` element provided by Bootstrap\n * This component should be replaced by the element from Bootstrap when this PR is merged:\n * https://github.com/sebgroup/bootstrap/pull/533\n */\n\nexport const CloseButton: React.FC<JSX.IntrinsicElements[\"button\"]> = React.memo(\n    React.forwardRef((props: JSX.IntrinsicElements[\"button\"], ref: React.ForwardedRef<HTMLButtonElement>) => {\n        return <button ref={ref} {...props} className={classnames(\"rc close-btn\", props.className)} />;\n    })\n);\n","import React from \"react\";\nimport { randomId } from \"@sebgroup/frontend-tools/randomId\";\nimport classnames from \"classnames\";\n\nexport type CustomDropdownItemProps = JSX.IntrinsicElements[\"input\"] & {\n    multiple?: boolean;\n};\n\nexport const CustomDropdownItem: React.FC<CustomDropdownItemProps> = ({ multiple, children, ...props }: CustomDropdownItemProps) => {\n    const [id] = React.useState<string>(randomId(\"ddi-\"));\n\n    return (\n        <div className={classnames(\"custom-control\", { \"custom-checkbox\": multiple })}>\n            <input {...props} type={multiple ? \"checkbox\" : \"radio\"} id={id} className={classnames({ \"custom-control-input\": multiple }) || null} hidden={!multiple} />\n            <label className={classnames({ \"custom-control-label\": multiple, \"custom-radio\": !multiple })} htmlFor={id}>\n                {children}\n            </label>\n        </div>\n    );\n};\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport classnames from \"classnames\";\nimport { useCombinedRefs } from \"../hooks/useCombinedRef\";\nimport { CloseButton } from \"../CloseButton\";\nimport { CustomDropdownItem } from \"./CustomDropdownItem\";\nimport { FeedbackIndicator, Indicator } from \"../FeedbackIndicator/FeedbackIndicator\";\nimport { randomId } from \"@sebgroup/frontend-tools/randomId\";\nimport \"./dropdown.scss\";\n\nexport interface DropdownText {\n    selectAll?: string;\n    noResult?: string;\n    emptyList?: string;\n    search?: string;\n}\n\nconst defaultText: Required<DropdownText> = {\n    selectAll: \"Select all\",\n    emptyList: \"List is empty\",\n    noResult: \"No result\",\n    search: \"Search...\",\n};\n\nexport function getValueOfMultipleSelect(selectOptions: Array<HTMLOptionElement>): string[] {\n    return Array.from(selectOptions)\n        .filter((option) => option.selected)\n        .map((option) => option.value);\n}\n\n// This solution is meant to fix Gatsby build which complains that document and window doesn't exist in server-side rendering\nconst safeDocument: Document | null = typeof document !== \"undefined\" ? document : null;\nconst safeWindow: Window | null = typeof window !== \"undefined\" ? window : null;\n\nexport type DropdownProps = Omit<JSX.IntrinsicElements[\"select\"], \"value\"> & {\n    /** Props for the select's wrapper (div) */\n    wrapperProps?: JSX.IntrinsicElements[\"div\"];\n    /** The value of the dropdown */\n    value?: string | string[];\n    /** An event triggered when a select of type multiple is changed returning an array of the selected values */\n    onMultipleChange?: (selected: string[]) => void;\n    /** Allows searching throw the dropdown */\n    searchable?: boolean;\n    /** Allows clearing the dropdown with a clear button */\n    clearable?: boolean;\n    /** Allows setting custom label to be displayed for selected item */\n    selectedLabel?: string | ((value: string | string[]) => string | string[]);\n    /** Custom texts to be dispalyed in different parts of the dropdown */\n    text?: DropdownText;\n    /** Indicator for error, warning or success */\n    indicator?: Indicator;\n};\n\nexport const Dropdown: React.FC<DropdownProps> = React.forwardRef(\n    ({ wrapperProps = {}, text = {}, onMultipleChange, searchable, clearable, selectedLabel, indicator, ...props }: DropdownProps, ref) => {\n        const [toggleId] = React.useState<string>(randomId(\"ddt-\"));\n        const [selectAllId] = React.useState<string>(randomId(\"sa-\"));\n        const [show, setShow] = React.useState<boolean>(false);\n        const [allSelected, setAllSelected] = React.useState<boolean>(false);\n        const [searchKeyword, setSearchKeyword] = React.useState<string>(\"\");\n        const [menuStyle, setMenuStyle] = React.useState<React.CSSProperties>({});\n        const [label, setLabel] = React.useState<string>();\n        const [selectRef, setSelectRef] = React.useState<HTMLSelectElement>(null);\n        const [selectRefOptions, setSelectRefOptions] = React.useState<Array<HTMLOptionElement>>([]);\n        const searchRef = React.useRef<HTMLInputElement>();\n        const menuRef = React.useRef<HTMLDivElement>();\n        const dropdownRef = React.useRef<HTMLDivElement>();\n\n        const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(safeWindow?.navigator?.userAgent);\n\n        const handleChange = React.useCallback(\n            (e: React.ChangeEvent<HTMLInputElement>) => {\n                if (props.multiple) {\n                    const current = selectRefOptions.find((option) => option.value == e.target.value);\n                    current.selected = !current.selected;\n                } else {\n                    selectRef.value = e.target.value;\n                    setShow(false);\n                }\n                selectRef.dispatchEvent(new Event(\"change\", { bubbles: true }));\n                props.multiple && onMultipleChange && onMultipleChange(getValueOfMultipleSelect(selectRefOptions));\n            },\n            [isMobile, props.multiple, onMultipleChange, selectRefOptions]\n        );\n\n        const selectAll = React.useCallback(\n            (forceValue?: boolean | React.ChangeEvent<HTMLInputElement>) => {\n                selectRefOptions.forEach((option: HTMLOptionElement) => {\n                    if (!option.disabled) {\n                        option.selected = typeof forceValue === \"boolean\" ? forceValue : !allSelected;\n                    } else {\n                        option.selected = false;\n                    }\n                });\n                typeof forceValue === \"boolean\" && (selectRef.value = \"\");\n                selectRef.dispatchEvent(new Event(\"change\", { bubbles: true }));\n                props.multiple && onMultipleChange && onMultipleChange(getValueOfMultipleSelect(selectRefOptions));\n            },\n            [allSelected, props.multiple, selectRefOptions, selectRef]\n        );\n\n        const isAllSelected = React.useCallback((): boolean => {\n            return selectRefOptions.every((option: HTMLOptionElement) => {\n                return option.disabled ? true : option.selected;\n            });\n        }, [selectRefOptions]);\n\n        const toggleMenu = React.useCallback(\n            (event: React.MouseEvent<HTMLButtonElement>) => {\n                if (show) {\n                    setShow(false);\n                } else {\n                    const rect = event.currentTarget.getBoundingClientRect();\n                    const top: number = rect.top + rect.height;\n                    const left: number = rect.left;\n                    const bottom: number = window.innerHeight - rect.y + 4;\n                    const minWidth: number = rect.width;\n                    if (window.innerHeight - top < 200) {\n                        setMenuStyle({ minWidth, bottom, left, maxHeight: rect.y - 10 });\n                    } else {\n                        setMenuStyle({ minWidth, top, left, maxHeight: window.innerHeight - top - 12 });\n                    }\n                    setShow(true);\n                }\n            },\n            [show]\n        );\n\n        const onChange = React.useCallback(\n            (event: React.ChangeEvent<HTMLSelectElement>) => {\n                props.multiple && onMultipleChange && onMultipleChange(getValueOfMultipleSelect(Array.from(event.target.options)));\n                props.onChange && props.onChange(event);\n            },\n            [props.multiple, props.onChange, onMultipleChange]\n        );\n\n        /** TODO: Can be extracted to a component */\n        const getOptions = () => {\n            const list = React.Children.map(props.children, (Child) => {\n                if (!React.isValidElement(Child)) {\n                    return Child;\n                } else {\n                    const type: string = (Child.type as any)?.name || Child.type;\n                    const filteredBySearch = (element: React.ReactElement<any>): boolean => {\n                        if (searchKeyword) {\n                            if (React.isValidElement<any>(element)) {\n                                const keyword: string = searchKeyword.toLowerCase().trim();\n                                const text: string = String(element.props?.children).toLowerCase().trim();\n                                return text.indexOf(keyword) < 0;\n                            } else {\n                                return true;\n                            }\n                        }\n                        return false;\n                    };\n                    /** Radio buttons should be grouped with a name */\n                    const name: string = props.multiple ? null : toggleId;\n                    switch (type) {\n                        case \"option\":\n                            return filteredBySearch(Child) ? null : (\n                                <CustomDropdownItem\n                                    {...Child.props}\n                                    multiple={props.multiple}\n                                    name={name}\n                                    value={Child.props.value}\n                                    checked={Array.isArray(props.value) ? props.value.includes(Child.props.value) : props.value == Child.props.value}\n                                    onChange={handleChange}\n                                >\n                                    {Child.props.children}\n                                </CustomDropdownItem>\n                            );\n                        case \"optgroup\":\n                            const label = <label className=\"optgroup-label\">{Child.props?.label}</label>;\n                            return [\n                                searchKeyword ? null : label,\n                                ...React.Children.toArray(Child.props.children).map((groupChild: React.ReactElement<any>) => {\n                                    return filteredBySearch(groupChild) ? null : (\n                                        <CustomDropdownItem\n                                            {...groupChild.props}\n                                            multiple={props.multiple}\n                                            name={name}\n                                            value={groupChild.props.value}\n                                            checked={Array.isArray(props.value) ? props.value.includes(groupChild.props.value) : props.value == groupChild.props.value}\n                                            onChange={handleChange}\n                                        >\n                                            {groupChild.props.children}\n                                        </CustomDropdownItem>\n                                    );\n                                }),\n                            ];\n                        default:\n                            return searchKeyword ? null : Child;\n                    }\n                }\n            });\n            return list?.length ? list : searchKeyword ? <p>{text.noResult || defaultText.noResult}</p> : <p>{text.emptyList || defaultText.emptyList}</p>;\n        };\n\n        const measuredSelectRef = React.useCallback((node: HTMLSelectElement) => {\n            if (typeof ref === \"function\") {\n                // to pass ref back to parents\n                ref(node);\n            } else if (!!ref) {\n                (ref as any).current = node;\n            }\n            if (node !== null) {\n                setSelectRef(node);\n            }\n        }, []);\n\n        React.useEffect(() => {\n            !isMobile && props.multiple && setAllSelected(isAllSelected());\n        }, [props.value, props.multiple, isAllSelected]);\n\n        React.useEffect(() => {\n            !searchable && setSearchKeyword(\"\");\n        }, [searchable]);\n\n        React.useEffect(() => {\n            if (!!selectRef) {\n                setSelectRefOptions(Array.from(selectRef.options));\n            }\n        }, [selectRef]);\n\n        React.useEffect(() => {\n            if (!isMobile) {\n                const detectBlur = (event: MouseEvent) => {\n                    if (!dropdownRef.current.contains(event.target as any) && !menuRef.current.contains(event.target as any)) {\n                        setShow(false);\n                    }\n                };\n                const handleScroll = (event: WheelEvent): void => {\n                    if (!menuRef.current.contains(event.target as any)) {\n                        setShow(false);\n                    }\n                };\n\n                if (show) {\n                    searchRef.current?.focus();\n                    document.addEventListener(\"click\", detectBlur);\n                    window.addEventListener(\"wheel\", handleScroll);\n                } else {\n                    document.removeEventListener(\"click\", detectBlur);\n                    window.removeEventListener(\"wheel\", handleScroll);\n                }\n\n                return () => {\n                    document.removeEventListener(\"click\", detectBlur);\n                    window.removeEventListener(\"wheel\", handleScroll);\n                };\n            }\n        }, [show]);\n\n        React.useEffect(() => {\n            if (selectedLabel && typeof selectedLabel === \"string\") {\n                !isMobile && setLabel(selectedLabel || props.placeholder);\n            } else if (selectedLabel && typeof selectedLabel === \"function\") {\n                const newLabel: string | string[] = selectedLabel(props.value);\n                !isMobile && setLabel((Array.isArray(newLabel) ? newLabel.join(\", \") : newLabel) || props.placeholder);\n            } else {\n                !isMobile && setLabel((Array.isArray(props.value) ? props.value.join(\", \") : props.value) || props.placeholder);\n            }\n        }, [props.value, props.placeholder, selectedLabel]);\n\n        return (\n            <div {...wrapperProps} className={classnames(\"rc custom-dropdown\", wrapperProps.className)}>\n                {!isMobile && (\n                    <div className={classnames(\"dropdown\", { show, clearable })} ref={dropdownRef}>\n                        <FeedbackIndicator type={indicator?.type} message={null}>\n                            <button\n                                className=\"btn btn-secondary dropdown-toggle\"\n                                type=\"button\"\n                                id={toggleId}\n                                data-toggle=\"dropdown\"\n                                aria-haspopup=\"true\"\n                                aria-expanded=\"false\"\n                                onClick={toggleMenu}\n                                disabled={props.disabled}\n                            >\n                                <span>{label}</span>\n                            </button>\n                        </FeedbackIndicator>\n                        {clearable && <CloseButton onClick={() => selectAll(false)} disabled={props.disabled} />}\n                        {!safeDocument\n                            ? null\n                            : createPortal(\n                                  <div className={classnames(\"rc dropdown-menu\", { show })} aria-labelledby={toggleId} ref={menuRef} style={{ ...menuStyle }}>\n                                      {searchable && (\n                                          <input\n                                              className=\"form-control\"\n                                              type=\"search\"\n                                              placeholder={text.search || defaultText.search}\n                                              value={searchKeyword}\n                                              onChange={(e) => setSearchKeyword(e.target.value)}\n                                              ref={searchRef}\n                                          />\n                                      )}\n                                      {/* Select all button */}\n                                      {props.multiple && !searchKeyword ? (\n                                          React.Children.count(props.children) ? (\n                                              <>\n                                                  <div className=\"custom-control custom-checkbox select-all\">\n                                                      <input id={selectAllId} name=\"inline\" type=\"checkbox\" className=\"custom-control-input\" checked={allSelected} hidden onChange={selectAll} />\n                                                      <label className=\"custom-control-label\" htmlFor={selectAllId}>\n                                                          {text.selectAll || defaultText.selectAll}\n                                                      </label>\n                                                  </div>\n                                                  <div className=\"dropdown-divider\" />\n                                              </>\n                                          ) : (\n                                              text.emptyList || defaultText.emptyList\n                                          )\n                                      ) : null}\n\n                                      {getOptions()}\n                                  </div>,\n                                  safeDocument.body\n                              )}\n                    </div>\n                )}\n                <FeedbackIndicator type={indicator?.type} message={indicator?.message}>\n                    <select {...props} ref={measuredSelectRef} onChange={onChange} className={classnames(\"custom-select\", props.className)} hidden={!isMobile}>\n                        {/* select always picks the first item by default. Therefore the first needs to be initialized here */}\n                        {!props.value && (\n                            <option disabled value=\"\" hidden>\n                                {props.placeholder}\n                            </option>\n                        )}\n                        {React.Children.toArray(props.children).filter((Child: any) => [\"option\", \"optgroup\"].includes(Child.type))}\n                    </select>\n                </FeedbackIndicator>\n\n                {clearable && isMobile && <CloseButton onClick={() => selectAll(false)} disabled={props.disabled} />}\n            </div>\n        );\n    }\n);\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport \"./feedback-indicator.scss\";\n\nexport type IndicatorType = \"danger\" | \"warning\" | \"success\" | \"none\";\nexport type Indicator = FeedbackIndicatorProps;\n\ntype FeedbackIndicatorProps = React.PropsWithChildren<{\n    /** The type of the indicator. Available values: \"danger\" | \"warning\" | \"success\" */\n    type: IndicatorType;\n    /** The indicator message. `children` can also be used instead. */\n    message?: React.ReactNode;\n    /** Disable feedback indicator border */\n    noBorder?: boolean;\n}>;\n/** A helper component to display feedback for children content */\nexport const FeedbackIndicator: React.FC<FeedbackIndicatorProps> = (props: FeedbackIndicatorProps) => {\n    const [indicatorValue, setIndicatorValue] = React.useState<number>(0);\n\n    React.useEffect(() => {\n        switch (props.type) {\n            case \"danger\":\n                setIndicatorValue(10);\n                break;\n            case \"warning\":\n                setIndicatorValue(50);\n                break;\n            case \"success\":\n                setIndicatorValue(100);\n                break;\n            default:\n                setIndicatorValue(0);\n        }\n    }, [props.type]);\n\n    function wrap(children: any) {\n        const Child: any = React.Children.toArray(children)[0];\n\n        return React.isValidElement(Child) ? (\n            <>\n                {React.cloneElement<any>(Child as any, {\n                    className: classnames((Child.props as any).className, `rc-d feedback feedback-${indicatorValue}`, { \"no-border\": props.noBorder }, { \"mb-0\": props.message }),\n                })}\n                {props.type && <p className={classnames(\"rc-d feedback-message\")}>{props.message}</p>}\n            </>\n        ) : (\n            Child\n        );\n    }\n\n    const count: number = React.Children.count(props.children);\n\n    return count ? (props.type ? wrap(count > 1 ? <div>{props.children}</div> : props.children) : props.children) : null;\n};\n","import React from \"react\";\nimport { randomId } from \"@sebgroup/frontend-tools/randomId\";\nimport classnames from \"classnames\";\nimport { FeedbackIndicator, Indicator } from \"../FeedbackIndicator\";\nimport \"./textbox.scss\";\n\nexport type TextboxProps = JSX.IntrinsicElements[\"input\"] & {\n    /** Element label */\n    label?: string;\n    /** Element prefix slot */\n    leftSlot?: React.ReactNode;\n    /** Element prefix title */\n    leftSlotTitle?: string;\n    /** Callback when prefix button is clicked */\n    onLeftClick?: (event: React.MouseEvent<HTMLDivElement>) => void;\n    /** Callback when suffix button is clicked */\n    onRightClick?: (event: React.MouseEvent<HTMLDivElement>) => void;\n    /** Component associates with input ref */\n    reference?: React.RefObject<HTMLInputElement>;\n    /** Element suffix slot */\n    rightSlot?: React.ReactNode;\n    /** Element suffix title */\n    rightSlotTitle?: string;\n    /** Feedback indicator object */\n    indicator?: Indicator;\n    /** Wrapper props */\n    wrapperProps?: JSX.IntrinsicElements[\"div\"];\n};\n/** Textbox is a component that allows user to add or edit text with extra text or icon port */\nexport const Textbox: React.FC<TextboxProps> = React.forwardRef(\n    ({ leftSlot, leftSlotTitle, onLeftClick, rightSlot, rightSlotTitle, onRightClick, indicator, wrapperProps = {}, ...props }: TextboxProps, ref: React.ForwardedRef<HTMLInputElement>) => {\n        const [customId, setCustomId] = React.useState<string>(null);\n\n        React.useEffect(() => setCustomId(props.id ? props.id : props.label ? randomId(\"tbg-\") : null), [props.id]);\n\n        return (\n            <div {...wrapperProps} className={classnames(\"rc input-box-group\", wrapperProps.className)}>\n                {props.label && (\n                    <label className=\"custom-label\" htmlFor={customId}>\n                        {props.label}\n                    </label>\n                )}\n                <div className={classnames(\"rc input-group\", { disabled: props.disabled })}>\n                    <FeedbackIndicator {...indicator}>\n                        <div className=\"input-box-group-wrapper\">\n                            {leftSlot && (\n                                <div className={classnames(\"input-group-prepend\", { clickable: onLeftClick })} role={onLeftClick ? \"button\" : \"\"} onClick={onLeftClick}>\n                                    <span className=\"input-group-text\" title={leftSlotTitle}>\n                                        {leftSlot}\n                                    </span>\n                                </div>\n                            )}\n                            <input {...props} ref={ref} id={customId} className={classnames(\"form-control\", props.className)} />\n                            {rightSlot && (\n                                <div className={classnames(\"input-group-append\", { clickable: onRightClick })} onClick={onRightClick} role={onRightClick ? \"button\" : \"\"}>\n                                    <span className=\"input-group-text\" title={rightSlotTitle}>\n                                        {rightSlot}\n                                    </span>\n                                </div>\n                            )}\n                        </div>\n                    </FeedbackIndicator>\n                </div>\n            </div>\n        );\n    }\n);\n","var React = require('react');\n\nfunction ExternalLink (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"d\":\"M1.5 13A1.5 1.5 0 0 0 3 14.5h8a1.5 1.5 0 0 0 1.5-1.5V9a.5.5 0 0 0-1 0v4a.5.5 0 0 1-.5.5H3a.5.5 0 0 1-.5-.5V5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 0 0-1H3A1.5 1.5 0 0 0 1.5 5v8zm7-11a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 .5.5v5a.5.5 0 0 1-1 0V2.5H9a.5.5 0 0 1-.5-.5z\",\"key\":0}),React.createElement(\"path\",{\"fillRule\":\"evenodd\",\"d\":\"M14.354 1.646a.5.5 0 0 1 0 .708l-8 8a.5.5 0 0 1-.708-.708l8-8a.5.5 0 0 1 .708 0z\",\"key\":1})]);\n}\n\nExternalLink.defaultProps = {\"width\":\"1em\",\"height\":\"1em\",\"fill\":\"currentColor\",\"viewBox\":\"0 0 16 16\"};\n\nmodule.exports = ExternalLink;\n\nExternalLink.default = ExternalLink;\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["e","String","Math","random","Date","getTime","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","Footer","React","className","href","target","rel","title","src","alt","versions","require","props","currentVersion","setCurrentVersion","formattedList","setFormattedList","currentpath","window","location","regex","RegExp","matchedVersions","match","name","map","item","value","label","replace","wrapperProps","classnames","selectedLabel","find","onChange","origin","withPrefix","index","pkg","urls","releases","github","contribute","issues","v4","imageUrl","homepage","siteName","metaConfigs","keywords","siteUrl","description","sitePreviewImageUrl","jsonLD","url","image","screenshot","applicationCategory","operatingSystem","author","logo","useIsMobile","mobileQuery","mediaQueryLists","matchMedia","useState","matches","isMobile","setIsMobile","useEffect","handler","addEventListener","removeEventListener","CloseButton","ref","CustomDropdownItem","multiple","children","id","randomId","type","hidden","htmlFor","defaultText","getValueOfMultipleSelect","selectOptions","from","filter","option","selected","safeDocument","document","safeWindow","Dropdown","list","text","onMultipleChange","searchable","clearable","indicator","toggleId","selectAllId","show","setShow","allSelected","setAllSelected","searchKeyword","setSearchKeyword","menuStyle","setMenuStyle","setLabel","selectRef","setSelectRef","selectRefOptions","setSelectRefOptions","searchRef","menuRef","dropdownRef","test","navigator","userAgent","handleChange","current","dispatchEvent","Event","bubbles","selectAll","forceValue","forEach","disabled","isAllSelected","every","toggleMenu","event","rect","currentTarget","getBoundingClientRect","top","height","left","bottom","innerHeight","y","minWidth","width","maxHeight","options","measuredSelectRef","node","detectBlur","contains","handleScroll","focus","placeholder","newLabel","FeedbackIndicator","message","onClick","createPortal","style","search","checked","emptyList","Child","filteredBySearch","element","keyword","toLowerCase","trim","indexOf","includes","groupChild","noResult","body","indicatorValue","setIndicatorValue","count","noBorder","Textbox","leftSlot","leftSlotTitle","onLeftClick","rightSlot","rightSlotTitle","onRightClick","customId","setCustomId","clickable","role","ExternalLink","createElement","defaultProps","default","_objectWithoutPropertiesLoose","source","excluded","sourceKeys","keys"],"sourceRoot":""}